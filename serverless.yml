service:
  name: auction

plugins:
  - serverless-bundle
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: eu-west-1
  environment:
    AUCTION_TABLE_NAME: ${self:custom.AuctionTable.name}
    MAIL_QUEUE_URL: ${self:custom.MAILSQS.url}
    AUCTION_BUCKET_NAME: ${self:custom.AuctionBucket.name}
  iam:
    role:
      statements:
        - ${file(iam/AuctionTableIAM.yml):AuctionTableIAM}
        - ${file(iam/MAILSQSIAM.yml):Queue}
        - ${file(iam/AuctionBucketIAM.yml):AuctionBucketIAM}
resources:
  Resources:
    AuctionTable: ${file(resources/AuctionTable.yml):AuctionTable}
    AuctionBucket: ${file(resources/AuctionBucket.yml):AuctionBucket}
    AuctionBucketPolicy: ${file(resources/AuctionBucket.yml):AuctionBucketPolicy}
functions:
  createAuction:
    handler: src/handlers/createAuction.handler
    events:
      - http:
          method: POST
          path: /auction
          cors: true
          authorizer: ${self:custom.authorizer}
  getAuctions:
    handler: src/handlers/getAuctions.handler
    events:
      - http:
          method: GET
          path: /auctions
          cors: true
          authorizer: ${self:custom.authorizer}
  getAuction:
    handler: src/handlers/getAuction.handler
    events:
      - http:
          method: GET
          path: /auction/{id}
          cors: true
          authorizer: ${self:custom.authorizer}
  bidAuction:
    handler: src/handlers/bidAuction.handler
    events:
      - http:
          method: PATCH
          path: auction/{id}/bid
          cors: true
          authorizer: ${self:custom.authorizer}
  ticktockAuctions:
    handler: src/handlers/ticktockAuctions.handler
    # events:
    #   - schedule: rate(1 minute)
  uploadPicture:
    handler: src/handlers/uploadPicture.handler
    events:
      - http:
          method: PATCH
          path: auction/{id}/picture
          cors: true
          authorizer: ${self:custom.authorizer}
custom:
  authorizer: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:auth-service-${self:provider.stage}-auth
  AuctionTable:
    name: !Ref AuctionTable
    arn: !GetAtt AuctionTable.Arn
  AuctionBucket:
    name: auction-s3-abdelmounaimazz-${self:provider.stage}
  MAILSQS:
    arn: ${cf:notification-service-${self:provider.stage}.MAILSQSArn}
    url: ${cf:notification-service-${self:provider.stage}.MAILSQSUrl}
  bundle:
    linting: false
